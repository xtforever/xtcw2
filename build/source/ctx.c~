#include "ctx.h"
#include "mls.h"

/* alloc structure, re-use alloced but unsused structs */
/* returns >=0: index to struct */ 
int ctx_init(int *CTX, int size)
{
    if(! *CTX) {
	 *CTX = m_create( 10, size);
    }
    
    /* find empty element */
    int *d;
    int p;
    m_foreach(*CTX,p,d) {
	if( d == 0 ) goto found;
    }
    d = m_add(*CTX);
 found:
    *d=1;
    return p;
}

void ctx_free(int *CTX, int p, void (*free_cb)(int *ctx, int p))
{
    free_cb(CTX,p);         /* user data free */
    int *d = mls(*CTX,p);   
    *d=0;                   /* internal data free */

    /* clear CTX if no struct is left */
    m_foreach( *CTX, p, d ) {
	if( *d ) return;
    }
    m_free(*CTX);
    *CTX=0;
}

void ctx_destruct(int *CTX, void (*free_cb)(int *ctx, int p))
{
    int p;
    int *d;
    m_foreach( *CTX, p, d ) {
	if( *d )free_cb(CTX, p);
    }        
    m_free(*CTX);
    *CTX=0;
}

